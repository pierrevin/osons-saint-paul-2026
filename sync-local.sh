#!/bin/bash
# sync-local.sh - Script de synchronisation automatique en local

echo "üîÑ Synchronisation automatique en local"
echo "======================================"

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# √âtape 1: R√©cup√©rer les modifications depuis GitHub
log_info "√âtape 1: R√©cup√©ration des modifications depuis GitHub..."
git fetch origin main

# V√©rifier s'il y a des diff√©rences
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/main)

if [ "$LOCAL" = "$REMOTE" ]; then
    log_info "‚úÖ Aucune modification √† synchroniser"
    exit 0
fi

# √âtape 2: Sauvegarder les modifications locales
log_info "√âtape 2: Sauvegarde des modifications locales..."
if ! git diff-index --quiet HEAD --; then
    git stash push -m "Sauvegarde avant sync automatique - $(date)"
    log_info "‚úÖ Modifications locales sauvegard√©es"
fi

# √âtape 3: Fusionner les modifications
log_info "√âtape 3: Fusion des modifications..."
git pull origin main

# √âtape 4: Restaurer les modifications locales
log_info "√âtape 4: Restauration des modifications locales..."
if git stash list | grep -q "Sauvegarde avant sync automatique"; then
    git stash pop
    log_info "‚úÖ Modifications locales restaur√©es"
fi

# √âtape 5: Analyser les modifications de contenu
log_info "√âtape 5: Analyse des modifications de contenu..."

# V√©rifier les fichiers de contenu modifi√©s
CONTENT_FILES=(
    "data/site_content.json"
    "data/propositions.json"
    "admin/users.json"
    "admin/logs/security.log"
)

MODIFIED_CONTENT=false
for file in "${CONTENT_FILES[@]}"; do
    if git diff HEAD~1 HEAD --name-only | grep -q "$file"; then
        log_info "üìù Contenu modifi√©: $file"
        MODIFIED_CONTENT=true
    fi
done

if [ "$MODIFIED_CONTENT" = true ]; then
    log_warn "‚ö†Ô∏è  Modifications de contenu d√©tect√©es !"
    echo ""
    echo "üìã Ces modifications viennent de l'interface admin en production."
    echo "üí° Vous pouvez maintenant :"
    echo "   1. Tester ces modifications en local"
    echo "   2. Les modifier si n√©cessaire"
    echo "   3. Les commiter pour les sauvegarder"
    echo ""
    echo "üîç Voir les modifications :"
    echo "   git diff HEAD~1 HEAD"
    echo ""
    echo "üíæ Commiter les modifications :"
    echo "   git add ."
    echo "   git commit -m 'Sync: Modifications de contenu depuis production'"
    echo "   git push origin main"
fi

log_info "‚úÖ Synchronisation automatique termin√©e !"
echo ""
echo "üìä R√©sum√© :"
echo "‚úÖ Code de d√©veloppement: Synchronis√©"
echo "‚úÖ Contenu de production: R√©cup√©r√©"
echo "‚úÖ Modifications locales: Pr√©serv√©es"
