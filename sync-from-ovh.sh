#!/bin/bash

# Script de synchronisation depuis OVH
# Usage: ./sync-from-ovh.sh
# Ce script r√©cup√®re les modifications d'OVH et les int√®gre en local

set -e

echo "üîÑ Synchronisation depuis OVH"
echo "============================"

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier s'il y a des modifications locales non commit√©es
if ! git diff-index --quiet HEAD --; then
    log_warn "‚ö†Ô∏è  Modifications locales d√©tect√©es !"
    echo "Voulez-vous :"
    echo "1) Sauvegarder et continuer"
    echo "2) Annuler la synchronisation"
    read -p "Votre choix (1/2): " choice
    
    if [ "$choice" = "2" ]; then
        log_info "Synchronisation annul√©e"
        exit 0
    fi
    
    # Sauvegarder les modifications locales
    log_info "Sauvegarde des modifications locales..."
    git stash push -m "Sauvegarde avant sync OVH - $(date)"
fi

# R√©cup√©rer les modifications d'OVH
log_info "R√©cup√©ration des modifications d'OVH..."
git fetch origin

# V√©rifier s'il y a des diff√©rences
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/main)

if [ "$LOCAL" = "$REMOTE" ]; then
    log_info "‚úÖ Aucune modification √† synchroniser"
    exit 0
fi

# Afficher les diff√©rences
log_info "Diff√©rences d√©tect√©es :"
git log --oneline HEAD..origin/main

# Fusionner les modifications
log_info "Fusion des modifications..."
git pull origin main

# Restaurer les modifications locales si elles existaient
if git stash list | grep -q "Sauvegarde avant sync OVH"; then
    log_info "Restauration des modifications locales..."
    git stash pop
fi

log_info "‚úÖ Synchronisation termin√©e !"
echo ""
echo "üìã Prochaines √©tapes :"
echo "1. Tester les modifications en local"
echo "2. R√©soudre les conflits √©ventuels"
echo "3. Commit et push si tout fonctionne"
